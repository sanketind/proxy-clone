{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windsurf\\\\Proxy\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Button, TextField, Card, Typography } from '@mui/material';\nimport { supabase } from '../config/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    name: '',\n    description: ''\n  });\n\n  // Fetch projects\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('projects').select('*').order('created_at', {\n      ascending: false\n    });\n    if (error) {\n      console.error('Error fetching projects:', error);\n    } else {\n      setProjects(data || []);\n    }\n  };\n\n  // Add new project\n  const addProject = async e => {\n    e.preventDefault();\n    const {\n      data,\n      error\n    } = await supabase.from('projects').insert([{\n      name: newProject.name,\n      description: newProject.description\n    }]).select();\n    if (error) {\n      console.error('Error adding project:', error);\n    } else {\n      setNewProject({\n        name: '',\n        description: ''\n      });\n      fetchProjects();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 3\n      },\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addProject,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2,\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Project Name\",\n            value: newProject.name,\n            onChange: e => setNewProject({\n              ...newProject,\n              name: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Description\",\n            value: newProject.description,\n            onChange: e => setNewProject({\n              ...newProject,\n              description: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"Add Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"iBpSgRSUXGOdFH1rFo+3Ftabv3Q=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","Box","Button","TextField","Card","Typography","supabase","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","newProject","setNewProject","name","description","fetchProjects","data","error","from","select","order","ascending","console","addProject","e","preventDefault","insert","sx","p","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","display","gap","label","value","onChange","target","required","fullWidth","type","flexDirection","map","project","color","id","_c","$RefreshReg$"],"sources":["D:/Windsurf/Proxy/src/pages/Projects.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Button, TextField, Card, Typography } from '@mui/material';\nimport { supabase } from '../config/supabase';\n\nfunction Projects() {\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({ name: '', description: '' });\n\n  // Fetch projects\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  const fetchProjects = async () => {\n    const { data, error } = await supabase\n      .from('projects')\n      .select('*')\n      .order('created_at', { ascending: false });\n    \n    if (error) {\n      console.error('Error fetching projects:', error);\n    } else {\n      setProjects(data || []);\n    }\n  };\n\n  // Add new project\n  const addProject = async (e) => {\n    e.preventDefault();\n    \n    const { data, error } = await supabase\n      .from('projects')\n      .insert([{\n        name: newProject.name,\n        description: newProject.description\n      }])\n      .select();\n\n    if (error) {\n      console.error('Error adding project:', error);\n    } else {\n      setNewProject({ name: '', description: '' });\n      fetchProjects();\n    }\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" sx={{ mb: 3 }}>My Projects</Typography>\n      \n      {/* Add Project Form */}\n      <Card sx={{ p: 2, mb: 3 }}>\n        <form onSubmit={addProject}>\n          <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n            <TextField\n              label=\"Project Name\"\n              value={newProject.name}\n              onChange={(e) => setNewProject({ ...newProject, name: e.target.value })}\n              required\n            />\n            <TextField\n              label=\"Description\"\n              value={newProject.description}\n              onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}\n              fullWidth\n            />\n            <Button type=\"submit\" variant=\"contained\">Add Project</Button>\n          </Box>\n        </form>\n      </Card>\n\n      {/* Projects List */}\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n        {projects.map(project => (\n          <Card key={project.id} sx={{ p: 2 }}>\n            <Typography variant=\"h6\">{project.name}</Typography>\n            <Typography color=\"text.secondary\">{project.description}</Typography>\n          </Card>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}