{"ast":null,"code":"var _jsxFileName = \"D:\\\\Windsurf\\\\Proxy\\\\src\\\\components\\\\SupabaseTest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SupabaseTest = () => {\n  _s();\n  const [session, setSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check current session\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      setSession(session);\n      setLoading(false);\n    });\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Supabase Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Connected as: \", session.user.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => supabase.auth.signOut(),\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : 'Not connected - Please sign in'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SupabaseTest, \"dkuVYdQvZEJ7aX3whq8i9qrSbuA=\");\n_c = SupabaseTest;\nexport default SupabaseTest;\nvar _c;\n$RefreshReg$(_c, \"SupabaseTest\");","map":{"version":3,"names":["React","useEffect","useState","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","SupabaseTest","_s","session","setSession","loading","setLoading","auth","getSession","then","data","subscription","onAuthStateChange","_event","unsubscribe","children","fileName","_jsxFileName","lineNumber","columnNumber","user","email","onClick","signOut","_c","$RefreshReg$"],"sources":["D:/Windsurf/Proxy/src/components/SupabaseTest.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabase';\n\nconst SupabaseTest = () => {\n  const [session, setSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check current session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setLoading(false);\n    });\n\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Supabase Connection Test</h2>\n      <p>\n        {session ? (\n          <>\n            Connected as: {session.user.email}\n            <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\n          </>\n        ) : (\n          'Not connected - Please sign in'\n        )}\n      </p>\n    </div>\n  );\n};\n\nexport default SupabaseTest;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACAE,QAAQ,CAACW,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC,IAAI,EAAE;QAAEP;MAAQ;IAAE,CAAC,KAAK;MACzDC,UAAU,CAACD,OAAO,CAAC;MACnBG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;;IAEF;IACA,MAAM;MACJI,IAAI,EAAE;QAAEC;MAAa;IACvB,CAAC,GAAGf,QAAQ,CAACW,IAAI,CAACK,iBAAiB,CAAC,CAACC,MAAM,EAAEV,OAAO,KAAK;MACvDC,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,MAAMQ,YAAY,CAACG,WAAW,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIT,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCrB,OAAA;MAAAiB,QAAA,EACGZ,OAAO,gBACNL,OAAA,CAAAE,SAAA;QAAAe,QAAA,GAAE,gBACc,EAACZ,OAAO,CAACiB,IAAI,CAACC,KAAK,eACjCvB,OAAA;UAAQwB,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAACW,IAAI,CAACgB,OAAO,CAAC,CAAE;UAAAR,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACjE,CAAC,GAEH;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxCID,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}